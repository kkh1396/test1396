
------------BASIC ----------------

-- 1. 춘 기술대학교의 학과 이름과 계열을 표시하시오. 단 출력 헤더는 "학과 명", "계열"으로
-- 표시하시오

SELECT * FROM TB_DEPARTMENT;

SELECT DEPARTMENT_NAME "학과 명", CATEGORY "계열"
FROM TB_DEPARTMENT;

-- 학과의 학과 정원을 다음과 같은 형태로 화면에 추력한다.
SELECT * FROM TB_DEPARTMENT;

SELECT department_name|| '의 정원은 ' || CAPACITY || '명 입니다.' "학과별 정원"
FROM TB_DEPARTMENT;

-- 3."국어국만학과" 에 다니는 여학생 중 현재 휴학중인 여학생을 찾아달라는 요청

SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT;

SELECT STUDENT_NAME
FROM TB_STUDENT S, TB_DEPARTMENT D
WHERE s.department_no = d.department_no
      AND s.department_no = '001'
      AND SUBSTR(STUDENT_SSN,8,1) = '2'
      AND ABSENCE_YN = 'Y';
      



--4. 도서관에서 대출 도서 장기 연제차 들을 찾아 아름을 게시하고자 한다 

SELECT * FROM TB_STUDENT;

SELECT STUDENT_NAME 
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079','A513090','A513091','A513110','A513119')
ORDER BY STUDENT_NO DESC;



-- 5. 입학정원이 20명 이상 30명 이하인 학과들의 학과 이름과 계열을 출력하시오.


SELECT * FROM TB_DEPARTMENT;

SELECT DEPARTMENT_NAME 학과 , CATEGORY 계열
FROM TB_DEPARTMENT
WHERE capacity BETWEEN 20 AND 30 ;



-- 6. 총장의 이름을 알아낼수 있는 SQL 문장 작성

SELECT * FROM TB_PROFESSOR;

SELECT PROFESSOR_NAME FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;



-- 7.학과가 지정되지 않은 학생 확인

SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT;

SELECT * FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8. 선수과목 존재하는 과목들은 어떤 과목인지 과목번호로 조회

SELECT * FROM TB_CLASS;

SELECT CLASS_NO 
FROM TB_CLASS
WHERE preattending_class_no IS NOT NULL;

-- 9. 어떤 계열들이 있는지 중복제거해서 조회

SELECT * FROM TB_DEPARTMENT;

SELECT DISTINCT CATEGORY 
FROM TB_DEPARTMENT;


-- 10 . 02학번 전주 거주자들의 모임을 만들려고한다. 
--      휴학한 사람 제외 재학중인 학생들의 학번, 이름, 주민번호를 출력하는 구문 작성

SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT;

SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT 
WHERE SUBSTR(ENTRANCE_DATE,1,2) = '02'
      AND ABSENCE_YN = 'N'
      AND student_address LIKE '전주%';


--------------------------------------------------------------------------------
------------ADDITIONAL  ----------------

     
-- 1. 영어영문학과     학생들의 학번과 이름 입학년도를 빠른순으로 작성
SELECT * FROM tb_department;
SELECT * FROM tb_STUDENT;

SELECT STUDENT_NO 학번, STUDENT_NAME 이름 ,  TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD')입학년도
FROM tb_department D, tb_student S
WHERE d.department_no = s.department_no
      AND d.department_no = '002'
ORDER BY ENTRANCE_DATE;


-- 2. 교수 이름 중 세글자가 아닌 교수의 이름과 주민번호를 출력하자

SELECT * FROM TB_PROFESSOR;

SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME LIKE '__' OR PROFESSOR_NAME LIKE '____%';


-- 3. 남교수들의 이름과 나이를 출력 
-- 젊은 순으로 출력 

SELECT * FROM TB_PROFESSOR;

SELECT PROFESSOR_NAME 교수이름, EXTRACT(YEAR FROM SYSDATE)  -  EXTRACT(YEAR FROM TO_DATE('19'||SUBSTR(PROFESSOR_SSN,1,2),'RR')) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN,8,1) = '1'
ORDER BY 2 ;




-- 4. 교수이름 성제외하고 출력하기 
SELECT * FROM TB_PROFESSOR;

SELECT SUBSTR(PROFESSOR_NAME,2,2)
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME NOT LIKE '__' 
     AND PROFESSOR_NAME NOT LIKE '____' ;
     
     

--5. 재수생 입학자를 구한다.

SELECT *  FROM  TB_STUDENT;

SELECT STUDENT_NO 학번, STUDENT_NAME 이름 , STUDENT_SSN 주민등록, ENTRANCE_DATE 입학날,
EXTRACT(YEAR FROM ENTRANCE_DATE) - EXTRACT (YEAR FROM  TO_DATE(SUBSTR(STUDENT_SSN,1,6))) 나이
FROM TB_STUDENT
WHERE (EXTRACT(YEAR FROM ENTRANCE_DATE) - EXTRACT (YEAR FROM  TO_DATE(SUBSTR(STUDENT_SSN,1,6)))) > 19
ORDER BY 4;


-- 6. 2020년 크리스마스는 무슨 요일?


SELECT TO_CHAR(TO_DATE(20201225, 'YYYYMMDD'),'YYYYMMDD DAY') FROM DUAL; -- 금요일


--7. TO_DATE('99/10/11','YY/MM/DD'), TO_DATE('49/10/11','YY/MM/DD') 각각 몇 년 몇월 몇일?
--TO_DATE('RR/10/11','YY/MM/DD'), TO_DATE('49/10/11','RR/MM/DD') 각각 몇 년 몇월 몇일?

SELECT TO_CHAR(TO_DATE('99/10/11','YY/MM/DD'), 'YYYYMMDD'),  -- 2099년 10월 11일
       TO_CHAR(TO_DATE('49/10/11','YY/MM/DD'), 'YYYYMMDD') , -- 2049년 10월 11일
      TO_CHAR(TO_DATE('99/10/11','RR/MM/DD'),'YYYYMMDD'),    -- 1999년 10월 11일
      TO_CHAR(TO_DATE('49/10/11','RR/MM/DD'),'YYYYMMDD')     -- 2049년 10월 11일
FROM DUAL;


-- 8. 2000년도 이후 입학자들은 A로 시작 2000녀도 이전 학번을 받은 학생을 출력

SELECT * FROM TB_STUDENT;

SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE NOT SUBSTR(STUDENT_NO,1,1) = 'A';


-- 9. 학번 A517178 인 한아름 학생의 학점 총 평점을 구하시오
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_GRADE;

SELECT ROUND(SUM(POINT) / COUNT(POINT),1) 평점
FROM TB_STUDENT S , TB_GRADE G
WHERE s.student_no = g.student_no
     AND G.STUDENT_NO = 'A517178'
GROUP BY G.STUDENT_NO;


-- 10. 학과별 학생수를 구하여 학과번호, 학생수 로 출력
SELECT * FROM TB_DEPARTMENT, TB_STUDENT;
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_DEPARTMENT;

SELECT DEPARTMENT_NO 학과번호, COUNT(DEPARTMENT_NO) "학생수(명)"
FROM  TB_STUDENT 
GROUP BY DEPARTMENT_NO
ORDER BY 1;



-- 11. 지도 교수 배정을 못받은 학생수 

SELECT * FROM TB_STUDENT;

SELECT COUNT(*) 
FROM TB_STUDENT
WHERE coach_professor_no IS NULL;


-- 12. 학번 A112113 학생의 년도별 평점을 구하시오 


SELECT * FROM TB_STUDENT;
SELECT * FROM TB_GRADE;

SELECT SUBSTR(TERM_NO,1,4) 년도 , ROUND(SUM(POINT) / COUNT(POINT),1) "년도 별 평점"
FROM TB_STUDENT S,TB_GRADE G
WHERE G.STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4);



-- 13. 학과 별 휴학생 수 파악

SELECT * FROM TB_STUDENT;

SELECT DEPARTMENT_NO 학과코드명, COUNT(*)"휴학생 수"
from TB_STUDENT
WHERE ABSENCE_YN  = 'Y'
GROUP BY DEPARTMENT_NO 
ORDER BY 1;


-- 14. 동명이인 학생들의 이름을 찾는다 

SELECT * FROM TB_STUDENT;
/*
SELECT
FROM TB_STUDENT S1, TB_STUDENT S2
WH
*/

SELECT STUDENT_NAME, COUNT(STUDENT_NAME)
FROM TB_STUDENT
GROUP BY STUDENT_NAME 
HAVING COUNT(STUDENT_NAME) >= 2
ORDER BY 1;


-- 15. A112113인 김고운 학생의 년도 , 학기 별 평점과 년도별 누적 평점, 총평점을 구하시오

SELECT * FROM TB_STUDENT;
SELECT * FROM TB_GRADE;

--SELECT SUBSTR(TERM_NO,1,4) 년도 , SUBSTR(TERM_NO,5,2) 학기    , AVG(POINT)

SELECT SUBSTR(TERM_NO,1,4) 년도 , SUBSTR(TERM_NO,5,2) 학기 , LPAD(ROUND(AVG(POINT),1),5) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4), SUBSTR(TERM_NO,5,2))
ORDER BY 1;

